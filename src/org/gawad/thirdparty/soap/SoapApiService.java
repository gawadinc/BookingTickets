
package org.gawad.thirdparty.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SoapApiService", targetNamespace = "https://demo.contentrail.com/ws/SoapApi/0.1/", wsdlLocation = "https://demo.contentrail.com/ws/soapApi")
public class SoapApiService
    extends Service
{

    private final static URL SOAPAPISERVICE_WSDL_LOCATION;
    private final static WebServiceException SOAPAPISERVICE_EXCEPTION;
    private final static QName SOAPAPISERVICE_QNAME = new QName("https://demo.contentrail.com/ws/SoapApi/0.1/", "SoapApiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://demo.contentrail.com/ws/soapApi");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SOAPAPISERVICE_WSDL_LOCATION = url;
        SOAPAPISERVICE_EXCEPTION = e;
    }

    public SoapApiService() {
        super(__getWsdlLocation(), SOAPAPISERVICE_QNAME);
    }

    public SoapApiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SOAPAPISERVICE_QNAME, features);
    }

    public SoapApiService(URL wsdlLocation) {
        super(wsdlLocation, SOAPAPISERVICE_QNAME);
    }

    public SoapApiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SOAPAPISERVICE_QNAME, features);
    }

    public SoapApiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SoapApiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SoapApiPortType
     */
    @WebEndpoint(name = "SoapApiPort")
    public SoapApiPortType getSoapApiPort() {
        return super.getPort(new QName("https://demo.contentrail.com/ws/SoapApi/0.1/", "SoapApiPort"), SoapApiPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SoapApiPortType
     */
    @WebEndpoint(name = "SoapApiPort")
    public SoapApiPortType getSoapApiPort(WebServiceFeature... features) {
        return super.getPort(new QName("https://demo.contentrail.com/ws/SoapApi/0.1/", "SoapApiPort"), SoapApiPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SOAPAPISERVICE_EXCEPTION!= null) {
            throw SOAPAPISERVICE_EXCEPTION;
        }
        return SOAPAPISERVICE_WSDL_LOCATION;
    }

}
